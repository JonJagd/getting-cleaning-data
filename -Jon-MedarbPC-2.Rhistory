housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",]
with(agricultureLogical, housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",])
housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",]
which(housingIdaho$ACR == "3" & housingIdaho$AGS == "6")
?which
which(with(housingIdaho, ACR == "3", housingIdaho$AGS == "6"))
which(with(housingIdaho, housingIdaho[ACR == "3", housingIdaho$AGS == "6",]))
which(with(housingIdaho, housingIdaho[housingIdaho$ACR == "3", housingIdaho$AGS == "6",]))
with(housingIdaho, housingIdaho[housingIdaho$ACR == "3", housingIdaho$AGS == "6",])
housingIdaho[housingIdaho$ACR == "3", housingIdaho$AGS == "6",]
housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",]
which(with(housingIdaho, housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",]))
with(housingIdaho, housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",]))
with(housingIdaho, housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",])
which(with(housingIdaho, housingIdaho[housingIdaho$ACR == "3" & housingIdaho$AGS == "6",]))
which(housingIdaho$ACR == "3" & housingIdaho$AGS == "6")
install.packages("jpeg")
library(jpeg)
library(jpeg)
readJPEG("./data/getdata-jeff.jpg", native = TRUE)
summary(readJPEG("./data/getdata-jeff.jpg", native = TRUE))
quantile(restData$councilDistrict, probs=c(0.5,0.75,0.9))
quantile(readJPEG("./data/getdata-jeff.jpg", native = TRUE), probs=c(0.3,0.80))
if(!file.exists("./data")){dir.create("./data")}
fileUrl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1,destfile="./data/gross_domestic_product.csv", mode = "wb")
download.file(fileUrl2,destfile="./data/educational.csv", mode = "wb")
gdp = read.csv("./data/gross_domestic_product.csv"); education <- read.csv("./data/educational.csv")
head(gdp,2)
head(education,2)
head(gdp,10)
head(education,10)
?merge
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = TRUE)
head(mergedData)
head(mergedData, 10)
head(mergedData, 30)
summary(mergedData)
str(mergedData)
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all.x = TRUE)
head(mergedData)
class(gdp)
head(gdp,10)
head(education,10)
mergedData[mergedData$X == "USA",]
head(mergedData)
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
mergedData
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
head(mergedData)
mergedData
mergedData[mergedData$X]
mergedData[,mergedData$X]
mergedData[,c("X")]
head(gdp,10)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
library(dplyr)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
head(mergedData)
tail(mergedData)
mergedData <- arrange(complete.cases(mergedData), desc(Gross.domestic.product.2012))
mergedData[complete.cases(mergedData),]
mergedData
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData
head(gdp,10)
head(education,10)
head(education,10)
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
head(mergedData)
library(dplyr)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
head(mergedData)
tail(mergedData)
tail(mergedData, 20)
mergedData[mergedData$X =! NA,]
mergedData[mergedData$X =! 'NA',]
mergedData[mergedData$X != 'NA',]
mergedData[mergedData$X != 'NA', c("X")]
head(mergedData)
mergedData[mergedData$X != 'NA', c("X", "X.2")]
mergedData[mergedData$X != 'NA', c("X", "X.2", "Gross.domestic.product.2012")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012")]
mergedData <- arrange(mergedData, desc(as.numeric(Gross.domestic.product.2012))
mergedData <- arrange(mergedData, desc(as.numeric(Gross.domestic.product.2012)))
mergedData$Gross.domestic.product.2012
class(mergedData$Gross.domestic.product.2012)
mergedData$Gross.domestic.product.2012 <- as.numeric(mergedData$Gross.domestic.product.2012)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
head(mergedData)
mergedData[, c("X", "X.2", "Gross.domestic.product.2012")]
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
gdp = read.csv("./data/gross_domestic_product.csv"); education <- read.csv("./data/educational.csv")
head(gdp,10)
head(education,10)
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012")]
head(gdp,10)
head(education,10)
head(mergedData)
tail(mergedData, 20)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
head(mergedData)
tail(mergedData, 20)
mergedData[, c("X", "X.2", "Gross.domestic.product.2012")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3")]
mergedData$Gross.domestic.product.2012 <- as.numeric(mergedData$Gross.domestic.product.2012)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3")]
head(gdp,10)
head(education,10)
head(mergedData)
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "CountryCode", "Short.Name")]
head(mergedData)
head(education,10)
gdp[gdp$X == "ITA"]
gdp[gdp$X == "ITA",]
education[education$CountryCode == "ITA"]
education[education$CountryCode == "ITA",]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name", "Short.Name")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name", "Short.Name")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name", "Short.Name")]
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name", "Short.Name")]
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name", "Short.Name")]
mergedData <- arrange(mergedData, desc(as.numeric(Gross.domestic.product.2012))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name", "Short.Name")]
mergedData <- arrange(mergedData, desc(as.numeric(Gross.domestic.product.2012)))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name", "Short.Name")]
gdp[gdp$X == "ITA",]
is.numeric(mergedData.Gross.domestic.product.2012)
is.numeric(Gross.domestic.product.2012)
is.numeric(mergedData$Gross.domestic.product.2012)
summary(mergedData)
(mergedData)
str(mergedData)
mergedData$GDPRank <- as.integer(mergedData$Gross.domestic.product.2012)
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3", "Long.Name", "Short.Name")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3", "Long.Name", "Short.Name")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3", "Long.Name")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3")]
str(mergedData)
typeof(mergedData$Gross.domestic.product.2012[[1]])
gdp = read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
head(gdp,10)
head(education,10)
gdp[gdp$X == "ITA",]
education[education$CountryCode == "ITA",]
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
head(mergedData)
tail(mergedData, 20)
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3")]
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3")] # "GDPRank"
typeof(mergedData$Gross.domestic.product.2012[[1]])
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3")] # "GDPRank"
testingSort <- mergedData[order(Gross.domestic.product.2012), ]
testingSort <- mergedData[order(mergedData$Gross.domestic.product.2012), ]
View(testingSort)
testingSort <- mergedData[order(as.numeric(mergedData$Gross.domestic.product.2012)), ]
View(testingSort)
testingSort$myOrderingColumn <- as.numeric(testingSort$Gross.domestic.product.2012)
testingSortAgain <- testingSort[order(testingSort$myOrderingColumn), ]
View(testingSortAgain)
typeof(testingSort$Gross.domestic.product.2012[[1]])
typeof(testingSort$myOrderingColumn[[1]])
testingSort <- mergedData[sort(mergedData$Gross.domestic.product.2012), ]
View(testingSort)
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
mergedData$GDPRank <- as.integer(mergedData$Gross.domestic.product.2012)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3")] #
gdp = read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
mergedData$GDPRank <- as.integer(mergedData$Gross.domestic.product.2012)
mergedData <- arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3")] #
gdp = read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
mergedData$GDPRank <- as.integer(mergedData$Gross.domestic.product.2012)
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3")] #
gdp = read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
head(gdp,10)
head(education,10)
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
gdp[gdp$X == "ITA",]
education[education$CountryCode == "ITA",]
gdpSorted <- gdp[order(gdp$Gross.domestic.product.2012),]
head(gdpSorted)
view(gdpSorted)
View(gdpSorted)
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
gdp
head(gdp,10)
typeof(gdp$X)
gdpSorted <- gdp[order(gdp$Gross.domestic.product.2012),]
gdpSorted
view(gdpSorted)
View(gdpSorted)
View(gdpSorted) <- gdp[order(as.numeric(gdp$Gross.domestic.product.2012)),]
gdpSorted <- gdp[order(as.numeric(gdp$Gross.domestic.product.2012)),]
View(gdpSorted)
gdpSorted <- gdp[order(as.integer(gdp$Gross.domestic.product.2012)),]
View(gdpSorted)
gdpSorted <- gdp[order(as.double(gdp$Gross.domestic.product.2012)),]
View(gdpSorted)
typeof(gdp$X)
gdpSorted$Rank <- as.integer(mergedData$Gross.domestic.product.2012)
gdpSorted$Rank <- as.integer(gdp$Gross.domestic.product.2012)
gdpSorted
View(gdpSorted)
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
gdp[X != ""]
gdp[X != "",]
gdp[gdp$X != "",]
gdp <- gdp[gdp$X != "",] # fjerner rækker uden country code
gdp
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE)
head(mergedData)
mergedData[mergedData$Gross.domestic.product.2012]
mergedData[mergedData$Gross.domestic.product.2012,]
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3"]
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "GDPRank", "X.3")]
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3")]
head(gdp,10)
head(education,10)
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "LongName")]
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Long.Name")]
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$X)))
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
#head(gdp,10)
#head(education,10)
gdp <- gdp[gdp$X != "",] # fjerner rækker uden country code
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = TRUE) # merger de to data sets
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$X)))
sum(!is.na(unique(mergedData$Gross.domestic.product.2012)))
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
#head(gdp,10)
#head(education,10)
gdp <- gdp[gdp$X != "",] # fjerner rækker uden country code
gdp
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE) # merger de to data sets
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE) # merger de to data sets
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = TRUE) # merger de to data sets
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$X)))
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
#head(gdp,10)
#head(education,10)
#gdp <- gdp[gdp$X != "",] # fjerner rækker uden country code
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = TRUE) # merger de to data sets
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$X)))
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
#head(gdp,10)
#head(education,10)
#gdp <- gdp[gdp$X != "",] # fjerner rækker uden country code
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE) # merger de to data sets
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$X)))
gdp <- read.csv("./data/gross_domestic_product.csv")
education <- read.csv("./data/educational.csv")
#head(gdp,10)
#head(education,10)
gdp <- gdp[gdp$X != "",] # fjerner rækker uden country code
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = TRUE) # merger de to data sets
mergedData[mergedData$Gross.domestic.product.2012 != "", c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$Gross.domestic.product.2012)))
gdp <- read.csv("./data/gross_domestic_product.csv" skip = 4, nrows = 215)
gdp <- read.csv("./data/gross_domestic_product.csv", skip = 4, nrows = 215)
gdp
gdp <- read.csv("./data/gross_domestic_product.csv", skip = 4, nrows = 215)
gdp <- gdp[gdp$X != "",] # fjerner rækker uden country code
gdp
gdp <- gdp[gdp$X != "" & !is.na(gdp$X.1),] # fjerner rækker uden country code og uden ranking
gdp
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = TRUE) # merger de to data sets
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE) # merger de to data sets
mergedData[, c("X", "X.2", "Gross.domestic.product.2012", "X.3", "Short.Name")]
mergedData[, c("X", "X.1", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$X)))
sum(mergedData$X)
sum(unique(mergedData$X)
sum(unique(mergedData$X))
sum(unique(mergedData$X))
mergedData$X
unique(mergedData$X)
sum(unique(mergedData$X))
mergedData[, c("X", "X.1", "X.3", "Short.Name")]
summary(mergedData)
str(mergedData)
str(mergedData$X)
mergedData$X
mergedData[, c("X", "X.1", "X.3", "Short.Name")]
mergedData[order(X.1, decreasing = TRUE),]
mergedData[order("X.1", decreasing = TRUE),]
mergedData[order("X.1", decreasing = TRUE), c("X", "X.1", "X.3", "Short.Name")]
mergedData[order("X.1", decreasing = TRUE), c("X", "X.1", "X.3", "Short.Name")][13]
mergedData[order("X.1", decreasing = TRUE), c("X", "X.1", "X.3")]
mergedData[order("X.1", decreasing = TRUE), c("X", "X.1", "X.3")][13]
mergedData[order("X.1", decreasing = TRUE), list("X", "X.1", "X.3")][13]
mergedData[order("X.1", decreasing = TRUE), list(X, X.1, X.3)][13]
mergedData$GDPRank <- as.integer(mergedData$X.1)
mergedData$GDPRank
mergedData
mergedData$X.1
mergedData$GDPRank
mergedData <- arrange(mergedData, desc(mergedData$GDPRank))
library(dplyr)
mergedData <- arrange(mergedData, desc(mergedData$GDPRank))
mergedData$GDPRank <- as.integer(mergedData$X.1)
mergedData <- arrange(mergedData, desc(mergedData$GDPRank))
View(mergedData)
mergedData <- arrange(mergedData, desc(mergedData$X.1))
mergedData[, c("X", "X.2", "GDPRank", "X.3")] #
mergedData[, c("X", "X.1", "GDPRank", "X.3")] #
testingSort <- mergedData[sort(mergedData$GDPRank), ]
testingSort
testingSort[, c("X", "X.1", "GDPRank", "X.3")]
testingSort <- mergedData[sort(mergedData$GDPRank), ]
View(testingSort)
sort(mergedData$GDPRank)
mergedData[sort(mergedData$GDPRank), ]
testingSort <- mergedData[sort(mergedData$GDPRank), ]
View(testingSort)
gdp <- read.csv("./data/gross_domestic_product.csv", skip = 4, nrows = 215)
gdp <- gdp[gdp$X != "" & !is.na(gdp$X.1),] # fjerner rækker uden country code og uden ranking
education <- read.csv("./data/educational.csv")
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE) # merger de to data sets
mergedData$GDPRank <- as.integer(mergedData$X.1)
View(mergedData)
mergedData[, c("X", "X.1", "GDPRank", "X.3")] #
testingSort <- mergedData[sort(mergedData$GDPRank), ]
testingSort[, c("X", "X.1", "GDPRank", "X.3")]
gdp <- read.csv("./data/gross_domestic_product.csv", skip = 4, nrows = 215)
gdp <- gdp[gdp$X != "" & !is.na(gdp$X.1),] # fjerner rækker uden country code og uden ranking
education <- read.csv("./data/educational.csv")
mergedData = merge(gdp,education,by.x = "X",by.y="CountryCode",all = FALSE) # merger de to data sets
mergedData[, c("X", "X.1", "X.3", "Short.Name")]
sum(!is.na(unique(mergedData$X)))
# [1] 189
mergedData <- arrange(mergedData, desc(mergedData$X.1))
library(dplyr)
mergedData <- arrange(mergedData, desc(mergedData$X.1))
testingSort <- mergedData[order(mergedData$GDPRank), ]
order(mergedData$GDPRank)
mergedData$GDPRank
mergedData$GDPRank <- as.integer(mergedData$X.1)
mergedData$GDPRank
mergedData[, c("X", "X.1", "GDPRank", "X.3")] #
order(mergedData$GDPRank)
testingSort <- mergedData[order(mergedData$GDPRank), ]
testingSort[, c("X", "X.1", "GDPRank", "X.3")]
testingSort <- mergedData[order(-mergedData$GDPRank), ]
testingSort[, c("X", "X.1", "GDPRank", "X.3")]
testingSort[, c("X", "X.1", "GDPRank", "X.3")][13]
testingSort[13, c("X", "X.1", "GDPRank", "X.3")]
View(testingSort)
View(gdp)
View(education)
mean(mergedData$X.1)
mergedData$X.1
oecdGroups <- group_by(mergedData, Income.Group)
oecdGroups
summarize(mergedData, X.1 = mean(X.1, na.rm = TRUE))
summarize(mergedData, X.1 = mean(X.1, na.rm = TRUE))
summarize(mergedData, X.1 = mean(X.1, na.rm = TRUE), Income.Group)
if (!file.exists("data")) {dir.create("data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.csv")
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
toupper(names(cameraData))
tolower(names(cameraData)) # alle bogstaver i titlerne konverteres til lower case
splNames = strsplit(names(cameraData), "\\.")
splitNames = strsplit(names(cameraData), "\\.")
splitNames
class(splitNames)
splitNames = strsplit(names(cameraData), "\.")
splitNames = strsplit(names(cameraData), "\\.")
splitNames[1,]
splitNames[[1]]
splitNames[[5]]
splitNames[[6]]
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
head(mylist)
mylist[1]
$letters
mylist$letters
mylist[1]
mylist[[1]]
splitNames[[6]]
splitNames[[6]][1]
splitNames[[6]][2]
firstElement <- function(x){x[1]} # vi laver en funktion der tager det første element i en liste
sapply(splitNames, firstElement) # for hver element i listen udtager vi det første element
reviews = read.csv("./data/reviews.csv"); solutions <- read.csv("./data/solutions.csv")
head(reviews,2)
head(solutions,2)
names(reviews)
sub("_","",names(reviews),)
sub("_","",names(reviews))
sub("_","",testName)
testName <- "this_is_a_test"
sub("_","",testName)
gsub("_","",testName) #
grep("Alameda",cameraData$intersection)
table(grepl("Alameda",cameraData$intersection))
cameraData[!grepl("Alameda",cameraData$intersection)]
cameraData[!grepl("Alameda",cameraData$intersection),]
cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection),]
cameraData2
grep("Alemeda",cameraData$intersection,value=TRUE)
grep("Alameda",cameraData$intersection,value=TRUE)
grep("Alemeda",cameraData$intersection,value=TRUE)
grep("Alemeda",cameraData$intersection,value=TRUE)
grep("Alameda",cameraData$intersection,value=TRUE)
length(grep("JeffStreet",cameraData$intersection))
library(stringr)
nchar("Jon Jagd CHristensen")
substr("Jon Jagd Christensen",1,7)
paste("Jon", "Jagd", "Christensen")
paste0("Jon", "Jagd", "Christensen")
str_trim("Jon       ")
str_trim("   Jon       ")
If(!file.exist("./data")){dir.create("./data")}
if(!file.exist("./data")){dir.create("./data")}
if(!file.exists("./data")){dir.create("./data")}
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile="./data/housing_idaho.csv", mode = "wb")
housingIdaho = read.csv("./data/housing_idaho.csv")
housingIdaho = read.csv("./data/housing_idaho.csv")
head(housingIdaho)
?strsplit()
names(housingIdaho)
strsplit(names(housingIdaho), "wgtp")
fileUrl1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl1,destfile="./data/gross_domestic_product.csv", mode = "wb")
gdp <- read.csv("./data/gross_domestic_product.csv", skip = 4, nrows = 215)
head(gdp)
names(gdp)
library(dplyr)
gdp <- rename(gdp, X = CountryCode, X.1 = Rank)
head(gdp)
gdp <- rename(gdp, CountryCode = X, Rank = X.1)
head(gdp)
gdp <- rename(gdp, CountryCode = X, Rank = X.1, Economy = X.3, US dollars = X.4)
head(gdp)
gdp <- rename(gdp, CountryCode = X, Rank = X.1, Economy = X.3, USdollars = X.4)
head(gdp)
gdp <- rename(gdp, Economy = X.3, USdollars = X.4)
head(gdp)
names(gdp)
colMeans(gdp)
colMeans(gdp$USdollars)
colMeans(gdp[,gdp$USdollars])
gdp[,gdp$USdollars]
gdp[,gdp$USdollars]
gdp$USdollars
gdp[,gdp$USdollars]
gdp[,c("USdollars")]
colMeans(gdp[,c("USdollars")])
?colMeans
gdp
gdp <- gdp[gdp$X != "" & !is.na(gdp$X.1),] # fjerner rækker uden country code og uden ranking
gdp <- read.csv("./data/gross_domestic_product.csv", skip = 4, nrows = 215)
names(gdp)
# Jeg omdøber nogle af kolonnenavnene
library(dplyr)
gdp <- rename(gdp, CountryCode = X, Rank = X.1, Economy = X.3, USdollars = X.4)
gdp <- gdp[gdp$X != "" & !is.na(gdp$X.1),] # fjerner rækker uden country code og uden ranking
gdp <- read.csv("./data/gross_domestic_product.csv", skip = 4, nrows = 215)
names(gdp)
# Jeg omdøber nogle af kolonnenavnene
library(dplyr)
#gdp <- rename(gdp, CountryCode = X, Rank = X.1, Economy = X.3, USdollars = X.4)
gdp <- gdp[gdp$X != "" & !is.na(gdp$X.1),]
gdp
colMeans(gdp[,gdp$X.4])
gdp[,gdp$X.4]
gdp[,c("X.4")]
colMeans(gdp[,c("X.4")])
typeof(gdp$X.4)
mean(gdp[,c("X.4")])
mean(as.integer(gdp[,c("X.4")]))
gdp$X.4
gsub(",","",gdp$X.4)
mean(as.integer(gsub(",","",gdp$X.4)))
typeof(gdp$X.4)
gdp$X.4
mean(as.integer(gsub(",","",gdp$X.4)))
